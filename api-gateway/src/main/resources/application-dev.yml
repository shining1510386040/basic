#server:
#  port: 9000
#spring:
#  application:
#    name: api-gateway
#  mvc:
#    view:
#      ## gateway 是基于webflux实现的mvc，和springmvc不同；
#      suffix: .html
#  redis:
#    host: 127.0.0.1
#    database: 9
#    #password:
#    port: 6379
#  boot:
#    admin:
#      client:
#        read-timeout: 5000ms
#        # 监控的实例信息
#        instance:
#          prefer-ip: true
#        username: admin
#        password: admin
#        # admin-server 管理端地址
#        url: http://127.0.0.1:8001
#  cloud:
#    gateway:
#      # 全局跨域设置
#      globalcors:
#        cors-configurations:
#          '[/**]':
#            ## 允许的源
#            allowedOrigins: "*"
#            ## 允许的请求方式
#            allowedMethods:
#              - GET
#              - OPTIONS
#              - PUT
#              - DELETE
#              - POST
#      #默认的过滤器链，为所有的路由增加filter过滤
#      default-filters:
#        ## 添加响应头
#        - AddResponseHeader=X-Response-Default-Foo, Default-Bar
#        ## 为下游服务请求添加前缀
#      #        - PrefixPath=/ops
#      # 路由匹配
#      routes:
#        #        ## 匹配某个时间（ZoneDateTime）之后的请求
#        #        - id: after_route
#        #          ### 下游服务地址
#        #          uri:  http://127.0.0.1:8080
#        #          predicates:
#        #            - After=2021-01-21T18:10:51.135+08:00[Asia/Shanghai]
#        #        ## 按请求头匹配：请求头包含x-request-id
#        #        - id: header_route
#        #          uri: http://www.baidu.com
#        #          predicates:
#        #            - Header=x-request-id
#        #        ## 按请求方式匹配
#        - id: method_route
#          uri: http://localhost:8080
#          predicates:
#            - Method=GET,POST
##        ## 按请求路径url匹配转发
##        - id: path_route
##          uri: http://localhost:8080
##          predicates:
##            - Path=/user/**
##        ## 按查询参数匹配：参数中包含wd
##        - id: query_route
##          uri: http://www.baidu.com
##          predicates:
##            - Query=wd
##        ## 按请求所在的网段匹配
##        - id: remoteaddr_route
##          uri: http://www.baidu.com
##          predicates:
##            - RemoteAddr=192.168.1.1/24
##          filters:
##            ### 为下游请求添加一个请求头：accessToken:tokenValue
##            - AddRequestHeader=accessToken,tokenValue
##            ### 为下游请求添加一个请求参数：username=zhangsan
##            - AddRequestParameter=username,zhangsan
##            ### 为所有匹配的请求添加响应头：
##            - AddResponseHeader=Content-Type,application/json
##            ### 熔断过滤器：
##            - name: Hystrix
##              args:
##                name: fallbackcmd
##                fallbackUri: forward:/incaseoffailure
##            ### 路径重写
##            - RewritePath=/consumingserviceendpoint,/backingserviceendpoint
##            ### 为所有匹配的请求添加前缀
##            - PrefixPath=/aaa
##            ### 请求限流过滤器
##            - name: RequestRateLimiter
##              args:
##                # redis令牌桶速率：每秒10个请求，最大20个请求每秒
###                redis-rate-limiter.replenishRate: 10
###                redis-rate-limiter.burstCapacity: 20
##                keyResolver:  "#{@keyResolver}"
##                rate-limiter: "#{@rateLimiter}"
