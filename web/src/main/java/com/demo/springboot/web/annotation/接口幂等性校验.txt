1.啥叫接口的幂等性？
    通俗来讲：多次发起同一个请求, 必须保证操作只能执行一次
    场景：
    订单接口, 不能多次创建订单
    支付接口, 重复支付同一笔订单只能扣一次钱
    支付宝回调接口, 可能会多次回调, 必须处理重复回调
    普通表单提交接口, 因为网络超时等原因多次点击提交, 只能成功一次
2.常见解决方案？
        唯一索引 -- 防止新增脏数据                             （db层面处理）
        token机制 -- 防止页面重复提交                         (controller层面处理)
        悲观锁 -- 获取数据的时候加锁(锁表或锁行)
        乐观锁 -- 基于版本号version实现, 在更新数据那一刻校验数据
        分布式锁 -- redis(jedis、redisson)或zookeeper实现
        状态机 -- 状态变更, 更新数据时判断状态
3.实现思路？
    为需要保证幂等性的每一次请求 创建一个唯一标识token,
    先获取token, 并将此token存入redis, 请求接口时, 将此token放到header或者作为请求参数请求接口,
    后端接口判断redis中是否存在此token:
        如果存在, 正常处理业务逻辑, 并从redis中删除此token, 那么, 如果是重复请求, 由于token已被删除, 则不能通过校验, 返回请勿重复操作提示
        如果不存在, 说明参数不合法或者是重复请求, 返回提示即可
4.具体实现？
    自定义注解ApiIdempotent+拦截器+redis（存token）
    拦截器里：preHandle():幂等性校验

    TokenServie接口：
        创建token：生成token+存redis
        校验token：校验token+从redis删除
    保证一个请求一个token。。
